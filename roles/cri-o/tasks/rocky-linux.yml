---
# tasks file for cri-o on Rocky Linux, Redhat or CentOS
#
- name: Create system network configuration file {{ crio_net_configfile }}
  file:
    path: "{{ crio_net_configfile }}"
    state: touch
    mode: 0640

- name: Set system network configuration
  blockinfile:
    path: "{{ crio_net_configfile }}"
    block: |
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply new settings
  command: sysctl --system

#- name: "Get list of old libcontainer repositories files" 
#  find:
#    paths: /etc/yum.repos.d
#    patterns: "devel:kubic:libcontainers*"
#    #patterns: '^devel:kubic:libcontainers:+$'
#  register: find_results

#- name: "Remove old libcontainer repositories" 
#  file:
#    path: "{{ item['path'] }}"
#    state: absent
#  with_items: "{{ find_results['files'] }}"

- name: Remove current libcontainer and CRI repositories 
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "/etc/yum.repos.d/{{ centos_crio_reponame1 }}.repo"
  - "/etc/yum.repos.d/{{ centos_crio_reponame2 }}.repo"

- name: Add containers libraries repository {{ centos_crio_repobaseurl1 }} into /etc/yum.repos.d/{{ centos_crio_reponame1 }}.repo
  yum_repository:
    name: "{{ centos_crio_reponame1 }}"
    state: present
    description: "{{ centos_crio_repodesc1 }}"
    baseurl: "{{ centos_crio_repobaseurl1 }}"
    gpgkey: "{{ centos_crio_repogpgkey1 }}"
    gpgcheck: yes

- name: Add CRI-O {{ crio_version }} repository {{ centos_crio_repobaseurl2 }} into /etc/yum.repos.d/{{ centos_crio_reponame2 }}.repo
  yum_repository:
    name: "{{ centos_crio_reponame2 }}"
    state: present
    description: “{{ centos_crio_repodesc2 }}“
    baseurl: "{{ centos_crio_repobaseurl2 }}"
    gpgkey: "{{ centos_crio_repogpgkey2 }}"
    gpgcheck: yes

# Installation of CRI-O 
# Notes that Kubernetes repository has bee added in dependencies role; it is required to install crictl
# crictl is a CLI by Kubernetes to interact with installed CRI; it is required to deploy Kubernetes with kubeadm
- name: "Install CRI-O {{ crio_version }} packages: {{ centos_crio_pkgname }}, {{ centos_critools_pkgname }}"
  dnf:
    name:
      - "{{ centos_crio_pkgname }}"
      - "{{ centos_critools_pkgname }}"
    state: present
    update_cache: yes
  notify:
    - enable crio

# Possibly remove proxy environment variables in /etc/sysconfig/crio 
- name: No proxy required - Remove proxy variable from {{ centos_crio_envfile }} 
  ansible.builtin.blockinfile:
    path: "{{ centos_crio_envfile }}"
    create: true
    marker_begin: "# Next lines added by Ansible_Kubernetes-cluster playbook"
    marker_end: "# Previous lines added by Ansible_Kubernetes-cluster playbook"
    block: "" 
  when: global_proxy_required != "yes"

# Configure CRI-O system startup environment file to add proxy variables
# If required, set proxy environment variables in /etc/sysconfig/crio 
#- name: Set proxy in {{ centos_crio_envfile }} 
#  ansible.builtin.blockinfile:
#    path: "{{ centos_crio_envfile }}" 
#    create: "true"
#    marker_begin: "# Next lines added by Ansible_Kubernetes-cluster playbook"
#    marker_end: "# Previous lines added by Ansible_Kubernetes-cluster playbook"
#    block: |
#      Environment="http_proxy={{ global_http_proxy }}"
#      Environment="https_proxy={{ globl_https_proxy }}" 
#      Environment="no_proxy={{ global_no_proxy }}"
#      Environment="HTTP_PROXY={{ global_http_proxy }}"
#      Environment="HTTPS_PROXY={{ global_https_proxy }}" 
#      Environment="NO_PROXY={{ global_no_proxy }}"
#  when: global_proxy_required == "yes"

# Possibly remove proxy environment variables in /usr/lib/systemd/system/crio.service 
- name: No proxy required - Remove proxy variable from {{ centos_crio_startupfile }} 
  ansible.builtin.blockinfile:
    path: "{{ centos_crio_startupfile }}"
    marker_begin: "# Next lines added by Ansible_Kubernetes-cluster playbook"
    marker_end: "# Previous lines added by Ansible_Kubernetes-cluster playbook"
    block: "" 
  #when: global_proxy_required != "yes"

# Configure CRI-O system startup file to add proxy variables
# If required, set proxy environment variables in /usr/lib/systemd/system/crio.service 
- name: Set proxy in {{ centos_crio_startupfile }} 
  ansible.builtin.blockinfile:
    path: "{{ centos_crio_startupfile }}" 
    marker_begin: "# Next lines added by Ansible_Kubernetes-cluster playbook"
    marker_end: "# Previous lines added by Ansible_Kubernetes-cluster playbook"
    insertafter: "^EnvironmentFile="
    block: |
      Environment=http_proxy={{ global_http_proxy }}
      Environment=https_proxy={{ global_https_proxy }}
      Environment=no_proxy={{ global_no_proxy }}
      Environment=HTTP_PROXY={{ global_http_proxy }}
      Environment=HTTPS_PROXY={{ global_https_proxy }}
      Environment=NO_PROXY={{ global_no_proxy }}
  when: global_proxy_required == "yes"

# Upload registries configuration file
- name: "Upload registries configuration file to {{ crio_registries_configfile }}"  
  template:
    src:   registries.conf.j2
    dest:   "{{ crio_registries_configfile }}"
    owner: root
    group: root
    mode:  0640
    backup: yes

# Upload CRI-O configuration file
- name: "Upload CRI-O configuration file {{ crio_crio_configfile }}"  
  template:
    src:   crio.conf.j2
    dest:   "{{ crio_crio_configfile }}"
    owner: root
    group: root
    mode:  0640
    backup: yes

# Remove possible CRI-O bridge configuration file
- name: Remove possible CRI-O bridge configuration file {{ crio_bridge_configfile }}
  file:
    path: "{{ crio_bridge_configfile }}"
    state: absent

# Upload CRI-O bridge configuration file
#- name: "Upload CRI-O bridge configuration file {{ crio_bridge_configfile }}"  
#  template:
#    src: 100-crio-bridge.conf.j2
#    dest: "{{ crio_bridge_configfile }}"
#    owner: root
#    group: root
#    mode: 0640
#    backup: yes
#  when: global_cni != 'calico'

- name: "Restart CRI-O" 
  systemd:
    name: crio
    state: restarted
    enabled: yes
    daemon_reload: yes
