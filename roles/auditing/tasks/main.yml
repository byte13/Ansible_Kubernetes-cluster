---
# tasks file for auditing
# Create directory on target node to contain audit policy file 
- name: Create {{ audit_apiserver_policydir }} directory on target node
  file:
    path: "{{ audit_apiserver_policydir }}"
    state: directory
    owner: root
    group: root
    mode: 0750

# Create directory on target node to contain audit log files
- name: Create {{ audit_apiserver_logdir }} directory on target node
  file:
    path: "{{ audit_apiserver_logdir }}"
    state: directory
    owner: root
    group: root
    mode: 0750

# Set apiserver auditing policy file
- name: Upload apiserver audit policy file 
  template:
    src: K8S_Audit-Policy_simple.j2
    dest:   "{{ audit_apiserver_policyfile }}"
    backup: true
    owner: root
    group: root
    mode:  0640

# Modify apiserver static pod manifest to add auditing
- name: Modify {{ k8s_apiserver_manifest }} to add auditing
  blockinfile:
    path: "{{ k8s_apiserver_manifest }}"
    # Don't backup manifest file; on restart, the apiserver use the backup file instead of the new file :-(
    backup: "false"
    insertafter: '^[\s]*\- kube-apiserver[\s]*$'
    marker_begin: "Begin marker -"
    marker: "# {mark} Ansible edit : command line options for auditing"
    marker_end: "End marker -"
    #block: "{{ audit_apiserver_args }}"
    block: |2
          - --audit-policy-file={{ audit_apiserver_policyfile }}
          - --audit-log-path={{ audit_apiserver_logfile }}
          - --audit-log-maxage=1
          - --audit-log-maxsize=20
          - --audit-log-maxbackup=5

# Modify apiserver static pod manifest to add audit volume mount point 
- name: Modify {{ k8s_apiserver_manifest }} to add audit volume mount point
  blockinfile:
    path: "{{ k8s_apiserver_manifest }}"
    # Don't backup manifest file; on restart, the apiserver use the backup file instead of the new file :-(
    backup: "false"
    insertafter: '^[\s]*volumeMounts\:[\s]*$'
    marker_begin: "Begin marker -"
    marker: "# {mark} Ansible edit : MountPath for auditing"
    marker_end: "End marker -"
    #block: "{{ audit_apiserver_volumeMounts }}"
    block: |2
          - mountPath: {{ audit_apiserver_policyfile }}
            name: k8s-audit-policy
            readOnly: true
          - mountPath: {{ audit_apiserver_logfile }}
            name: k8s-audit-log
            readOnly: false

# Modify apiserver static pod manifest to add audit volume
- name: Modify {{ k8s_apiserver_manifest }} to add audit volume
  blockinfile:
    path: "{{ k8s_apiserver_manifest }}"
    # Don't backup manifest file; on restart, the apiserver use the backup file instead of the new file :-(
    backup: "false"
    insertafter: '^[\s]*volumes\:[\s]*$'
    marker_begin: "Begin marker -"
    marker: "# {mark} Ansible edit : Volumes for auditing"
    marker_end: "End marker -"
    #block: "{{ audit_apiserver_volumes }}"
    block: |2
        - hostPath:
            path: {{ audit_apiserver_policyfile }}
            type: File
          name: k8s-audit-policy
        - hostPath:
            path: {{ audit_apiserver_logfile }}
            type: FileOrCreate
          name: k8s-audit-log

- name: "Restart kubelet to restart apiserver with modified manifest file"
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes

#- name: "Wait for k8s master node(s) to be ready..."
#  become: no
#  shell: |
#    # Keep the s at the end
#    kubectl wait --for=condition=Ready nodes --selector node-role.kubernetes.io/control-plane="" --timeout={{ global_wait_seconds }}s
#  register: masternodes_ready
#  when: (inventory_hostname in groups['k8smasternodes']) and (global_wait_masters == "yes")

- name: "Wait for api-server and all pods on k8s master node(s) to be ready..."
  become: no
  shell: |
    sleep {{ global_wait_seconds }}
    # Keep the s at the end
    kubectl wait pod --all -n kube-system --for condition=ContainersReady --timeout={{ global_wait_seconds }}s
  register: masternodes_containers_ready
  when: (inventory_hostname in groups['k8smasternodes']) and (global_wait_masters == "yes")

